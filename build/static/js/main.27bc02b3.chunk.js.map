{"version":3,"sources":["models/global.js","components/Map/index.js","components/InfoContent/index.js","global/index.js","datas/point.js","components/VideoActions/index.js","App.js","serviceWorker.js","index.js"],"names":["state","showVideoActions","reducers","setState","payload","effects","T","window","mapInstance","props","onload","useEffect","Map","centerAndZoom","LngLat","id","connect","global","messages","map","m","index","display","key","name","value","onClick","cluster","clearMarkers","infoWin","closeInfoWindow","carTrack","CarTrack","interval","speed","dynamicLine","polylinestyle","color","weight","opacity","Datas","datas","features","obj","i","coordinates","geometry","type","properties","time","InfoWindow","markers","addCluster","MarkerClusterer","className","start","pause","stop","clear","useState","mapLoad","setMapLoad","marker","Marker","Math","random","title","el","document","createElement","addEventListener","e","render","store","setContent","this","openInfoWindow","push","createMarkers","Boolean","location","hostname","match","init","models","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.27bc02b3.chunk.js","sourcesContent":["export default {\r\n    state: {\r\n        showVideoActions: false,\r\n    },\r\n    reducers: {\r\n        setState(state, payload){\r\n            return {...state, ...payload};\r\n        }\r\n    },\r\n    effects: {\r\n\r\n    }\r\n}","import React, {useEffect} from \"react\";\r\n\r\nconst T = window.T;\r\n\r\nexport let mapInstance = null;\r\nexport default function (props) {\r\n    const {onload} = props;\r\n    \r\n    useEffect(function () {\r\n        const zoom = 5;\r\n        mapInstance = new T.Map('map');\r\n        mapInstance.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);\r\n        onload()\r\n    }, []);\r\n    \r\n    return (\r\n        <div id={'map'}></div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport {clearCluster, addCluster, addCarLine} from \"../../global\";\r\n\r\nfunction InfoContent(props) {\r\n    const {messages, map, global} = props;\r\n\r\n    function onClick() {\r\n        clearCluster();\r\n        addCarLine();\r\n        global.setState({ showVideoActions: true })\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                messages.map( (m, index) => {\r\n                    if(m.display === 'inline') {\r\n                        return <span key={index}>{m.name}: {m.value}</span>\r\n                    } else {\r\n                        return <p key={index}>{m.name}: {m.value}</p>\r\n                    }\r\n                })\r\n            }\r\n            <div>\r\n                <button onClick={onClick}>轨迹回放</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction mapDispatch({global}) {\r\n    return {\r\n        global\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatch)(InfoContent)\r\n","import React from \"react\";\r\nimport {render} from \"react-dom\";\r\nimport {Provider} from 'react-redux';\r\nimport InfoContent from \"../components/InfoContent\";\r\nimport {mapInstance} from \"../components/Map\";\r\nimport {store} from \"../index\";\r\nimport {datas} from \"../datas/point\";\r\n\r\nconst T = window.T;\r\n\r\nlet cluster = null;\r\nlet infoWin = new T.InfoWindow();\r\nlet markers = []\r\n\r\nexport function createMarkers() {\r\n    for (let i = 0; i < 20000; i++) {\r\n        const messages = [\r\n            {\r\n                name: '集装箱号',\r\n                value: 'TBJU9053970',\r\n            },\r\n            {\r\n                name: '设备编号',\r\n                value: '0000121901105562',\r\n            },\r\n            {\r\n                name: '电压',\r\n                value: '3630mV',\r\n                display: 'inline',\r\n            },\r\n            {\r\n                name: '电量',\r\n                value: '98%',\r\n                display: 'inline',\r\n            },\r\n            {\r\n                name: '定位方式',\r\n                value: '卫星定位',\r\n            },\r\n            {\r\n                name: '网络类型',\r\n                value: '4G',\r\n            },\r\n            {\r\n                name: '安装日期',\r\n                value: '2019-12-12',\r\n            },\r\n            {\r\n                name: '所在国家',\r\n                value: '中国',\r\n            },\r\n            {\r\n                name: '海拔',\r\n                value: '118米',\r\n            },\r\n            {\r\n                name: '定位时间',\r\n                value: '2020-03-28 09:46:43',\r\n            },\r\n        ]\r\n        const marker = new T.Marker(new T.LngLat(Math.random() * 40 + 85, Math.random() * 30 + 21), {\r\n            title: i,\r\n            name: `我是${i}`\r\n        });\r\n        const el = document.createElement('div');\r\n        marker.addEventListener('click', function (e) {\r\n            render(\r\n                <Provider store={store}>\r\n                    <InfoContent messages={messages} map={mapInstance}/>\r\n                </Provider>,\r\n                el\r\n            );\r\n            infoWin.setContent(el);\r\n            this.openInfoWindow(infoWin)\r\n        });\r\n        markers.push(marker);\r\n    }\r\n}\r\n\r\nexport function addCluster() {\r\n    cluster = new T.MarkerClusterer(mapInstance, {markers});\r\n}\r\n\r\nexport function clearCluster() {\r\n    if (cluster) {\r\n        cluster.clearMarkers();\r\n        infoWin.closeInfoWindow();\r\n    }\r\n}\r\n\r\nexport let carTrack = null;\r\nexport function addCarLine() {\r\n     carTrack = new T.CarTrack(mapInstance, {\r\n        interval: 5,\r\n        speed: 10,\r\n        dynamicLine: true,\r\n        polylinestyle: {color: \"#2C64A7\", weight: 5, opacity: 0.9},\r\n        Datas: datas.features.map(function (obj, i) {\r\n            var coordinates = obj.geometry.coordinates;\r\n            var lnlat = new T.LngLat(coordinates[0], coordinates[1]);\r\n            return lnlat;\r\n        })\r\n    })\r\n    mapInstance.centerAndZoom(new T.LngLat(116.318090, 39.920270), 10);\r\n}\r\n","export const datas = {\n    type: 'FeatureCollection',\n    features: [\n        {\n            type: 'Feature',\n            properties: {\n                time: 1,\n                id: 'route1',\n                name: '五棵松',\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [\n                    116.26802,\n                    39.90623,\n                ],\n            },\n        },\n        {\n            type: 'Feature',\n            properties: {\n                time: 2,\n                id: 'route1',\n                name: '万寿路',\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [\n                    116.28896,\n                    39.90622,\n                ],\n            },\n        },\n        {\n            type: 'Feature',\n            properties: {\n                time: 3,\n                id: 'route1',\n                name: '公主坟',\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [\n                    116.30421,\n                    39.90625,\n                ],\n            },\n        },\n        {\n            type: 'Feature',\n            properties: {\n                time: 4,\n                id: 'route1',\n                name: '军事博物馆',\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [\n                    116.3155,\n                    39.90618,\n                ],\n            },\n        },\n        {\n            type: 'Feature',\n            properties: {\n                time: 5,\n                id: 'route1',\n                name: '木樨地',\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [\n                    116.3313,\n                    39.90611,\n                ],\n            },\n        },\n        {\n            type: 'Feature',\n            properties: {\n                time: 6,\n                id: 'route1',\n                name: '南礼士路',\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [\n                    116.34643,\n                    39.90583,\n                ],\n            },\n        },\n        {\n            type: 'Feature',\n            properties: {\n                time: 10,\n                id: 'route1',\n                name: '复兴门',\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [\n                    116.35033,\n                    39.90582,\n                ],\n            },\n        },\n        {\n            type: 'Feature',\n            properties: {\n                time: 11,\n                id: 'route1',\n                name: '西单',\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [\n                    116.36784,\n                    39.90579,\n                ],\n            },\n        },\n        {\n            type: 'Feature',\n            properties: {\n                time: 12,\n                id: 'route1',\n                name: '灵境胡同',\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [\n                    116.36755,\n                    39.91449,\n                ],\n            },\n        },\n        {\n            type: 'Feature',\n            properties: {\n                time: 13,\n                id: 'route1',\n                name: '西四',\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [\n                    116.36755,\n                    39.91449,\n                ],\n            },\n        },\n        {\n            type: 'Feature',\n            properties: {\n                time: 14,\n                id: 'route1',\n                name: '平安里',\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [\n                    116.36673,\n                    39.93235,\n                ],\n            },\n        },\n        {\n            type: 'Feature',\n            properties: {\n                time: 15,\n                id: 'route1',\n                name: '平安里中转',\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [\n                    116.36651,\n                    39.93924,\n                ],\n            },\n        },\n        {\n            type: 'Feature',\n            properties: {\n                time: 16,\n                id: 'route1',\n                name: '新街口',\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [\n                    116.36172,\n                    39.93923,\n                ],\n            },\n        },\n        {\n            type: 'Feature',\n            properties: {\n                time: 17,\n                id: 'route1',\n                name: '西直门',\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [\n                    116.34936,\n                    39.93913,\n                ],\n            },\n        },\n        {\n            type: 'Feature',\n            properties: {\n                time: 18,\n                id: 'route1',\n                name: '动物园',\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [\n                    116.33292,\n                    39.93697,\n                ],\n            },\n        },\n        {\n            type: 'Feature',\n            properties: {\n                time: 18,\n                id: 'route1',\n                name: '白石桥南',\n            },\n            geometry: {\n                type: 'Point',\n                coordinates: [\n                    116.319550,\n                    39.931000,\n                ],\n            },\n        },\n    ],\n};\n","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {addCluster, carTrack} from \"../../global\";\r\n\r\nfunction VideoActions(props) {\r\n    const {global} = props;\r\n\r\n    function goBack() {\r\n        addCluster();\r\n        global.setState({showVideoActions: false});\r\n        carTrack.clear();\r\n    }\r\n    function start() {\r\n        carTrack.start();\r\n    }\r\n    function pause() {\r\n        carTrack.pause();\r\n    }\r\n    function stop() {\r\n        carTrack.stop();\r\n    }\r\n    return (\r\n        <div className={'video-actions'}>\r\n            <button onClick={start}>播放</button>\r\n            <button onClick={pause}>暂停</button>\r\n            <button onClick={stop}>结束</button>\r\n            <button onClick={goBack}>返回</button>\r\n        </div>\r\n    )\r\n}\r\nfunction mapState({global}) {\r\n    return {\r\n        ...global\r\n    }\r\n}\r\nfunction mapDispatch({global}) {\r\n    return {\r\n        global\r\n    }\r\n}\r\nexport default connect(mapState,mapDispatch)(VideoActions)","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './App.css';\nimport Map, {mapInstance} from './components/Map';\nimport VideoActions from \"./components/VideoActions\";\nimport {createMarkers, addCluster} from \"./global\";\n\n\nfunction App(props) {\n    const {showVideoActions} = props;\n    const [mapLoad, setMapLoad] = useState(false);\n\n    useEffect(function () {\n        if (!mapLoad) return;\n        createMarkers();\n        addCluster();\n    }, [mapLoad]);\n\n\n    return (\n        <div className=\"App\">\n            <Map onload={() => setMapLoad(true)}/>\n            {\n                showVideoActions ? <VideoActions/> : null\n            }\n        </div>\n    );\n}\n\nfunction mapState({global}) {\n    return {\n        ...global\n    }\n}\n\nexport default connect(mapState)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { init } from \"@rematch/core\";\nimport { Provider } from \"react-redux\";\nimport * as models from './models';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nexport const store = init({\n    models,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}